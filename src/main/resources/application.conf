//
//akka {
//  persistence {
//    journal.plugin = "akka-persistence-sql-async.journal"
//    snapshot-store.plugin = "akka-persistence-sql-async.snapshot-store"
//  }
//}
//
//akka-persistence-sql-async {
//  journal.class = "akka.persistence.journal.sqlasync.MySQLAsyncWriteJournal"
//  snapshot-store.class = "akka.persistence.snapshot.sqlasync.MySQLSnapshotStore"
//
//  # For PostgreSQL
//  # journal.class = "akka.persistence.journal.sqlasync.PostgreSQLAsyncWriteJournal"
//  # snapshot-store.class = "akka.persistence.snapshot.sqlasync.PostgreSQLSnapshotStore"
//
//  user = "root"
//  password = ""
//  url = "jdbc:mysql://localhost/akka_persistence_sql_async"
//  max-pool-size = 4
//  wait-queue-capacity = 10000
//
//  metadata-table-name = "persistence_metadata"
//  journal-table-name = "persistence_journal"
//  snapshot-table-name = "persistence_snapshot"
//
//  connect-timeout = 5s
//  query-timeout = 5s
//}

akka.persistence.journal.plugin = "cassandra-journal"
akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
akka {
  actor {
    provider = cluster
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
//    use-passive-connections = on

  }
  # options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "ERROR"

  akka.persistence.journal.plugin = "cassandra-journal"

  cluster {
    seed-nodes = [
      "akka.tcp://ShardingSystem@127.0.0.1:2551",
//      "akka.tcp://ShardingSystem@127.0.0.1:2552"
    ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    auto-down-unreachable-after = 10s
//    sharding.state-store-mode = persistence
//    jmx.multi-mbeans-in-same-jvm = on
  }
}
